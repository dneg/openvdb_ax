
name: ax

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'
  schedule:
    # run this workflow every midnight Tuesday
    - cron:  '0 0 * * 2'

jobs:
  linux-core:
    runs-on: ubuntu-16.04
    name: linux-vfx:${{ matrix.image }}-compiler:${{ matrix.compiler }}-${{ matrix.build }}
    container:
      image: aswf/ci-vfxall:${{ matrix.image }}
    env:
      CXX: ${{ matrix.compiler }}
    strategy:
      matrix:
        image: ['2019-clang6', '2019-clang7', '2019-clang8', '2019-clang9', '2020-clang7', '2021-clang10']
        compiler: ['g++', 'clang++']
        build: ['Release']
        # Debug builds
        include:
          - image: '2019-clang8'
            compiler: 'g++'
            build: 'Debug'
          - image: '2019-clang8'
            compiler: 'clang++'
            build: 'Debug'
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      # Build
      - name: build
        run: |
          ./ci/build_ax.sh \
            -DCMAKE_BUILD_TYPE=${{ matrix.build }}
      # Tests
      - name: test
        run: cd build && ctest -V
      - name: test_doxygen_examples
        run: ./ci/extract_test_examples.sh

  macos-core:
    runs-on: macos-10.15
    name: macos-compiler:${{ matrix.compiler }}-llvm:${{ matrix.llvm }}-${{ matrix.build }}
    env:
      CXX: ${{ matrix.compiler }}
    strategy:
      matrix:
        compiler: ['g++', 'clang++']
        build: ['Release']
        llvm: ['7','8','9'] #@todo add back llvm 10 when the brew formula is fixed
        # Debug builds
        include:
          - compiler: 'g++'
            build: 'Debug'
            llvm: '8'
          - compiler: 'clang++'
            build: 'Debug'
            llvm: '8'
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      # Setup
      - name: install_deps
        run: ./ci/install_macos_ax.sh ${{ matrix.llvm }}
      - name: install_openvdb
        run: ./ci/install_openvdb.sh 7.0.0 $HOME/openvdb-7.0.0-${{ matrix.compiler }}
      # Build
      - name: build
        run: |
          ./ci/build_ax.sh \
            -DCMAKE_BUILD_TYPE=${{ matrix.build }} \
            -DLLVM_DIR=/usr/local/opt/llvm@${{ matrix.llvm }}/lib/cmake/llvm \
            -DOPENVDB_ROOT=$HOME/openvdb-7.0.0-${{ matrix.compiler }}
      # Tests
      - name: test
        run: cd build && ctest -V
      - name: test_doxygen_examples
        run: ./ci/extract_test_examples.sh
